/*
 *  ==++++++++++++++++++++++++++++++++++++++++++++++++++++==
 *  |      CENTRAL PHILIPPINE UNIVERSITY                   |
 *  |      Bachelor of Science in Software Engineering     |
 *  |      Jaro, Iloilo City, Philippines                  |
 *  |                                                      |
 *  |          This program is written by Rave, Â©2015.     |
 *  |          You are free to use and distribute this.    |
 *  |          Reach me at: admin@blackout.biz.tm          |
 *  |                                                      |
 *  |               ~~~"CODE the FUTURE"~~~                |
 *  ==++++++++++++++++++++++++++++++++++++++++++++++++++++==
 */
package com.albertos.displays.menu;

import com.albertos.controllers.PizzaJpaController;
import com.albertos.controllers.exceptions.NonexistentEntityException;
import com.albertos.controllers.EMFactory;
import com.albertos.objects.Inventory;
import com.albertos.objects.Pizza;
import java.awt.CardLayout;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityExistsException;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rave Noren Gidor-Sambo Villavicencio-Arevalo
 */
public class InventoryDisplay extends javax.swing.JFrame {

    private Inventory inventory;
    private Long modificationId;
    private final CardLayout card;
    private DefaultTableModel dtm;
    private boolean isNew;
    private DefaultListModel addedList = new DefaultListModel();

    /**
     * Creates new form InventoryDisplay
     */
    public InventoryDisplay() {
        initComponents();

        DefaultListModel dlm = new DefaultListModel();
        inventory = Inventory.getInstance();

        card = (CardLayout) rootPane.getLayout();
        dtm = (DefaultTableModel) resultTable.getModel();
        addedSelection = new JList(addedList);
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPane = new javax.swing.JPanel();
        displayPanel = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        labelSearch = new javax.swing.JLabel();
        searchKey = new javax.swing.JTextField();
        actionGo = new javax.swing.JButton();
        scrollerPane = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        actionModify = new javax.swing.JButton();
        actionDeleted = new javax.swing.JButton();
        actionAdd = new javax.swing.JButton();
        modificationsPanel = new javax.swing.JPanel();
        pizzaFieldsPanel = new javax.swing.JPanel();
        labelPizzaName = new javax.swing.JLabel();
        pizzaName = new javax.swing.JTextField();
        labelPizzaDescription = new javax.swing.JLabel();
        descriptionScroller = new javax.swing.JScrollPane();
        pizzaDescription = new javax.swing.JTextArea();
        labelPrice = new javax.swing.JLabel();
        pizzaPrice = new javax.swing.JTextField();
        actionAddPizza = new javax.swing.JButton();
        labelPrice1 = new javax.swing.JLabel();
        pizzaPrice1 = new javax.swing.JTextField();
        actionBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableSelection = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        addedSelection = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchAvailable = new javax.swing.JTextField();
        searchAdded = new javax.swing.JTextField();
        headerSecondPanel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rootPane.setLayout(new java.awt.CardLayout());

        displayPanel.setBackground(new java.awt.Color(255, 255, 153));

        header.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("Albertos Pizza");
        header.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/filter.png"))); // NOI18N
        labelSearch.setText("Search:");

        searchKey.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchKeyCaretUpdate(evt);
            }
        });
        searchKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchKeyActionPerformed(evt);
            }
        });

        actionGo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/search.png"))); // NOI18N
        actionGo.setText("GO");
        actionGo.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        scrollerPane.setBackground(new java.awt.Color(0, 0, 0));

        resultTable.setBackground(new java.awt.Color(255, 255, 102));
        resultTable.setForeground(new java.awt.Color(0, 0, 0));
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Pizza Name", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setGridColor(new java.awt.Color(0, 0, 0));
        resultTable.setRowHeight(22);
        resultTable.setSelectionBackground(new java.awt.Color(255, 204, 204));
        resultTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        resultTable.setShowHorizontalLines(true);
        resultTable.setShowVerticalLines(true);
        resultTable.getTableHeader().setReorderingAllowed(false);
        scrollerPane.setViewportView(resultTable);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(0).setMinWidth(50);
            resultTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            resultTable.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        actionModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/book_edit.png"))); // NOI18N
        actionModify.setText("Modify Selected Pizza");
        actionModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionModifyActionPerformed(evt);
            }
        });

        actionDeleted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/book_delete.png"))); // NOI18N
        actionDeleted.setText("Delete Selected Pizza");
        actionDeleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionDeletedActionPerformed(evt);
            }
        });

        actionAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/plus.png"))); // NOI18N
        actionAdd.setText("Add New Pizza");
        actionAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollerPane)
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(labelSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionGo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(actionAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionModify, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionDeleted))
                    .addComponent(header, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actionGo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchKey)
                    .addComponent(labelSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollerPane, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(actionDeleted, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(actionModify, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(actionAdd))
                .addContainerGap())
        );

        rootPane.add(displayPanel, "displayCard");

        modificationsPanel.setBackground(new java.awt.Color(255, 255, 153));

        pizzaFieldsPanel.setBackground(new java.awt.Color(255, 255, 102));
        pizzaFieldsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelPizzaName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPizzaName.setText("Pizza Name");

        labelPizzaDescription.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPizzaDescription.setText("Description");

        pizzaDescription.setColumns(20);
        pizzaDescription.setLineWrap(true);
        pizzaDescription.setRows(5);
        pizzaDescription.setWrapStyleWord(true);
        descriptionScroller.setViewportView(pizzaDescription);

        labelPrice.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPrice.setText("9-inch price");

        actionAddPizza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/plus.png"))); // NOI18N
        actionAddPizza.setText("Add Pizza");
        actionAddPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionAddPizzaActionPerformed(evt);
            }
        });

        labelPrice1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPrice1.setText("11-inch price");

        actionBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/albertos/resources/back.png"))); // NOI18N
        actionBack.setText("Back");
        actionBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionBackActionPerformed(evt);
            }
        });

        availableSelection.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Hotdog", "Ham", "Cheese" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        availableSelection.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(availableSelection);

        jButton1.setText("Add >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<< Remove");

        addedSelection.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(addedSelection);

        jLabel2.setText("Available Ingredients");

        jLabel3.setText("Added Pizza Ingredients");

        searchAvailable.setText("Search");
        searchAvailable.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchAvailableCaretUpdate(evt);
            }
        });
        searchAvailable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchAvailableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchAvailableFocusLost(evt);
            }
        });

        searchAdded.setText("Search");

        javax.swing.GroupLayout pizzaFieldsPanelLayout = new javax.swing.GroupLayout(pizzaFieldsPanel);
        pizzaFieldsPanel.setLayout(pizzaFieldsPanelLayout);
        pizzaFieldsPanelLayout.setHorizontalGroup(
            pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                        .addComponent(actionBack, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(actionAddPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pizzaFieldsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelPizzaName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pizzaName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(316, 316, 316))
                    .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pizzaFieldsPanelLayout.createSequentialGroup()
                                    .addComponent(descriptionScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(labelPrice1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(labelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(pizzaPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(pizzaPrice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(labelPizzaDescription))
                            .addComponent(jLabel2)
                            .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(searchAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(searchAdded, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pizzaFieldsPanelLayout.setVerticalGroup(
            pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelPizzaName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pizzaName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPizzaDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pizzaFieldsPanelLayout.createSequentialGroup()
                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pizzaPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pizzaPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPrice1)))
                    .addComponent(descriptionScroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pizzaFieldsPanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pizzaFieldsPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchAdded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(pizzaFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actionBack)
                    .addComponent(actionAddPizza))
                .addContainerGap())
        );

        headerSecondPanel.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        headerSecondPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerSecondPanel.setText("Albertos Pizza");
        headerSecondPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout modificationsPanelLayout = new javax.swing.GroupLayout(modificationsPanel);
        modificationsPanel.setLayout(modificationsPanelLayout);
        modificationsPanelLayout.setHorizontalGroup(
            modificationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modificationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerSecondPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pizzaFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        modificationsPanelLayout.setVerticalGroup(
            modificationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificationsPanelLayout.createSequentialGroup()
                .addComponent(headerSecondPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pizzaFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        rootPane.add(modificationsPanel, "modificationsCard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rootPane, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTable() {
        resultTable = new JTable();
        resultTable.setBackground(new java.awt.Color(255, 255, 102));
        resultTable.setForeground(new java.awt.Color(0, 0, 0));
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID", "Pizza Name", "Description"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        resultTable.setGridColor(new java.awt.Color(0, 0, 0));
        resultTable.setRowHeight(22);
        resultTable.setSelectionBackground(new java.awt.Color(255, 204, 204));
        resultTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        resultTable.setShowHorizontalLines(true);
        resultTable.setShowVerticalLines(true);
        resultTable.getTableHeader().setReorderingAllowed(false);
        scrollerPane.setViewportView(resultTable);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(0).setMinWidth(50);
            resultTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            resultTable.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        List<Pizza> pizzas = Inventory.getController().findPizzaEntities();

        dtm = (DefaultTableModel) resultTable.getModel();

        for (Pizza pizza : pizzas) {
            String datum1 = String.valueOf(pizza.getId());
            String datum2 = String.valueOf(pizza.getName());
            String datum3 = String.valueOf(pizza.getDescription());
            String[] data = {datum1, datum2, datum3};

            dtm.addRow(data);
        }

    }

    private void returnToMain() {
        refreshTable();
        card.show(rootPane, "displayCard");
    }

    private void search(String key) {
        if (key.isEmpty()) {
            resultTable.clearSelection();
            return;
        }
        for (int i = 0; i < dtm.getRowCount(); i++) {
            if (dtm.getValueAt(i, 1).toString().toUpperCase().contains(key.toUpperCase())) {
                resultTable.setRowSelectionInterval(i, i);
            }
        }
    }

    private void actionDeletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionDeletedActionPerformed
        int confirmRequest = JOptionPane.showConfirmDialog(
                null,
                "Are you sure you want to delete the selected Pizza?",
                "Confirm",
                JOptionPane.YES_NO_OPTION);

        if (confirmRequest == JOptionPane.YES_OPTION) {

            String id = (String) resultTable.getValueAt(resultTable.getSelectedRow(), 0);

            try {
                Inventory.getController().destroy(Long.parseLong(id));
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(InventoryDisplay.class.getName()).log(Level.SEVERE, null, ex);
            }

            refreshTable();
        } else {
            //do nothing            
        }
    }//GEN-LAST:event_actionDeletedActionPerformed

    private void actionAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionAddActionPerformed
        actionAddPizza.setText("Add Pizza");

        this.pizzaName.setText("");
        this.pizzaDescription.setText("");
        this.pizzaPrice.setText("");
        this.pizzaPrice1.setText("");

        card.show(rootPane, "modificationsCard");
        isNew = true;
    }//GEN-LAST:event_actionAddActionPerformed

    private void actionModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionModifyActionPerformed
        if (resultTable.getSelectedRowCount() < 1) {
            JOptionPane.showMessageDialog(
                    null,
                    "Cannot modify: No pizza selected!",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        actionAddPizza.setText("Save Changes");
        card.show(rootPane, "modificationsCard");
        isNew = false;

        String id = (String) resultTable.getValueAt(resultTable.getSelectedRow(), 0);
        inventory.setPizzaDataForModification(Inventory.getController().findPizza(Long.parseLong(id)));

        this.pizzaName.setText(inventory.getPizzaDataForModification().getName());
        this.pizzaDescription.setText(inventory.getPizzaDataForModification().getDescription());
        this.pizzaPrice.setText(inventory.getPizzaDataForModification().getNineInchPizzaPrice() + "");
        this.pizzaPrice1.setText(inventory.getPizzaDataForModification().getElevenInchPizzaPrice() + "");
    }//GEN-LAST:event_actionModifyActionPerformed

    private void actionBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionBackActionPerformed
        returnToMain();
    }//GEN-LAST:event_actionBackActionPerformed

    private void actionAddPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionAddPizzaActionPerformed
        Pizza pizza = new Pizza();
        if (isNew) {
            try {
                inventory.addPizza(
                        this.pizzaName.getText(),
                        this.pizzaDescription.getText(),
                        Double.parseDouble(this.pizzaPrice.getText()),
                        Double.parseDouble(this.pizzaPrice1.getText())
                );
            } catch (EntityExistsException e) {
                JOptionPane.showMessageDialog(
                        null,
                        "Entry creation failed!\n" + e.getMessage(),
                        "Failed",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(
                        null,
                        "Entry creation failed: Please check blank fields!\n",
                        "Failed",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(
                        null,
                        "Entry creation failed: Please check blank fields!\n",
                        "Failed",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            JOptionPane.showMessageDialog(
                    null,
                    "New Pizza menu created successfuly!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                inventory.getPizzaDataForModification().setName(this.pizzaName.getText());
                inventory.getPizzaDataForModification().setDescription(this.pizzaDescription.getText());
                inventory.getPizzaDataForModification().setNineInchPizzaPrice(Double.parseDouble(this.pizzaPrice.getText()));
                inventory.getPizzaDataForModification().setElevenInchPizzaPrice(Double.parseDouble(this.pizzaPrice1.getText()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(
                        null,
                        "Entry creation failed: Please check blank fields!\n",
                        "Failed",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(
                        null,
                        "Entry creation failed: Please check blank fields!\n",
                        "Failed",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            try {
                Inventory.getController().edit(inventory.getPizzaDataForModification());

                JOptionPane.showMessageDialog(
                        null,
                        "Update successful!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(
                        null,
                        "Update failed!\n" + ex.getMessage(),
                        "Success",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        returnToMain();
    }//GEN-LAST:event_actionAddPizzaActionPerformed

    private void searchKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchKeyActionPerformed
        search(searchKey.getText());
    }//GEN-LAST:event_searchKeyActionPerformed

    private void searchKeyCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchKeyCaretUpdate
        search(searchKey.getText());
    }//GEN-LAST:event_searchKeyCaretUpdate

    private void searchAvailableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchAvailableFocusGained
        searchAvailable.setText("");
    }//GEN-LAST:event_searchAvailableFocusGained

    private void searchAvailableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchAvailableFocusLost
        searchAvailable.setText("Search");
    }//GEN-LAST:event_searchAvailableFocusLost

    private void searchAvailableCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchAvailableCaretUpdate
        for (int i = 0; i < availableSelection.getModel().getSize(); i++) {
            System.out.println(i);
            if (searchAvailable.getText().toUpperCase()
                    .contains(availableSelection.getModel().getElementAt(i).toString().toUpperCase())) {
                availableSelection.setSelectedIndex(i);
            } else {
                availableSelection.setSelectedIndex(0);
            }
        }
        System.out.println(availableSelection.getModel().getSize());
    }//GEN-LAST:event_searchAvailableCaretUpdate

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addedList.addElement(availableSelection.getSelectedValue());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionAdd;
    private javax.swing.JButton actionAddPizza;
    private javax.swing.JButton actionBack;
    private javax.swing.JButton actionDeleted;
    private javax.swing.JButton actionGo;
    private javax.swing.JButton actionModify;
    private javax.swing.JList addedSelection;
    private javax.swing.JList availableSelection;
    private javax.swing.JScrollPane descriptionScroller;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JLabel header;
    private javax.swing.JLabel headerSecondPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelPizzaDescription;
    private javax.swing.JLabel labelPizzaName;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelPrice1;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JPanel modificationsPanel;
    private javax.swing.JTextArea pizzaDescription;
    private javax.swing.JPanel pizzaFieldsPanel;
    private javax.swing.JTextField pizzaName;
    private javax.swing.JTextField pizzaPrice;
    private javax.swing.JTextField pizzaPrice1;
    private javax.swing.JTable resultTable;
    private javax.swing.JPanel rootPane;
    private javax.swing.JScrollPane scrollerPane;
    private javax.swing.JTextField searchAdded;
    private javax.swing.JTextField searchAvailable;
    private javax.swing.JTextField searchKey;
    // End of variables declaration//GEN-END:variables
}
